name: Build API

on: [ push ]
#  pull_request:
#    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: setup python  
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: install libraries
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: run tests
        run: pytest ./tests

  build_docker_image:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: checkout code
        uses: actions/checkout@v3
      
      - name: set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: docker build and push
        uses: docker/build-push-action@v3.1.1
        with:
          context: .
          push: true
          tags: 09035077346/user_api:1.1.0-${{ github.run_number }}
  deploy_api:
    runs-on: ubuntu-latest
    needs: build_docker_image

    steps:
      - name: create infrastructure and deploy api
        #uses: hannut91/aws-cli@v1.18.65
        uses: hannut91/aws-cli@1.18.65

        with:
          args: aws cloudformation create-stack --stack-name user-api-deployment --template-body file://./ecs.yml --capabilities CAPABILITY_NAMED_IAM --parameters 'ParameterKey=SubnetID,ParameterValue=subnet-06e008ca7459ca28d'
          #env:
          #  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          #  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          #  AWS_DEFAULT_REGION: us-east-1
